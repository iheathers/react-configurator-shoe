/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Martin Trafas (https://sketchfab.com/Bexxie)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/free-datsun-280z-0789ab2ece9442de94b3c41595e0ecbd
title: [FREE] Datsun 280Z
*/

import React, { useRef, useState, useEffect } from "react";
import { useGLTF } from "@react-three/drei";

import { carState } from "../states/car-global-state";
import { useSnapshot } from "valtio";

export default function Car({ ...props }) {
  const group = useRef();

  const carSnap = useSnapshot(carState);
  const [hovered, setHovered] = useState(null);

  useEffect(() => {
    const cursor = `<svg width="64" height="64" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0)"><path fill="rgba(255, 255, 255, 0.5)" d="M29.5 54C43.031 54 54 43.031 54 29.5S43.031 5 29.5 5 5 15.969 5 29.5 15.969 54 29.5 54z" stroke="#000"/><g filter="url(#filter0_d)"><path d="M29.5 47C39.165 47 47 39.165 47 29.5S39.165 12 29.5 12 12 19.835 12 29.5 19.835 47 29.5 47z" fill="${carSnap.items[hovered]}"/></g><path d="M2 2l11 2.947L4.947 13 2 2z" fill="#000"/><text fill="#000" style="white-space:pre" font-family="Inter var, sans-serif" font-size="10" letter-spacing="-.01em"><tspan x="35" y="63">${hovered}</tspan></text></g><defs><clipPath id="clip0"><path fill="#fff" d="M0 0h64v64H0z"/></clipPath><filter id="filter0_d" x="6" y="8" width="47" height="47" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB"><feFlood flood-opacity="0" result="BackgroundImageFix"/><feColorMatrix in="SourceAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"/><feOffset dy="2"/><feGaussianBlur stdDeviation="3"/><feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.15 0"/><feBlend in2="BackgroundImageFix" result="effect1_dropShadow"/><feBlend in="SourceGraphic" in2="effect1_dropShadow" result="shape"/></filter></defs></svg>`;
    const auto = `<svg width="64" height="64" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill="rgba(255, 255, 255, 0.5)" d="M29.5 54C43.031 54 54 43.031 54 29.5S43.031 5 29.5 5 5 15.969 5 29.5 15.969 54 29.5 54z" stroke="#000"/><path d="M2 2l11 2.947L4.947 13 2 2z" fill="#000"/></svg>`;
    if (hovered) {
      document.body.style.cursor = `url('data:image/svg+xml;base64,${btoa(
        cursor
      )}'), auto`;
      return () =>
        (document.body.style.cursor = `url('data:image/svg+xml;base64,${btoa(
          auto
        )}'), auto`);
    }
  }, [hovered]);

  const { nodes, materials } = useGLTF("car.glb");

  return (
    <group
      ref={group}
      {...props}
      dispose={null}
      onPointerOver={(e) => {
        e.stopPropagation();
        setHovered(e.object.material.name);
      }}
      onPointerOut={(e) => {
        e.intersections.length === 0 && setHovered(null);
      }}
      onPointerMissed={() => (carState.current = null)}
      onClick={(e) => {
        e.stopPropagation();
        carState.current = e.object.material.name;
      }}
    >
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh
          geometry={nodes.Object_2.geometry}
          material-color={carSnap.items["280z_Brake_lamp"]}
          material={materials["280z_Brake_lamp"]}
        />
        <mesh
          geometry={nodes.Object_3.geometry}
          material-color={carSnap.items["280z_CarPaint"]}
          material={materials["280z_CarPaint"]}
        />
        <mesh
          geometry={nodes.Object_4.geometry}
          material-color={carSnap.items["280z_Reverse_lamp"]}
          material={materials["280z_Reverse_lamp"]}
        />
        <mesh
          geometry={nodes.Object_5.geometry}
          material-color={carSnap.items["280z_Carbon"]}
          material={materials["280z_Carbon"]}
        />
        <mesh
          geometry={nodes.Object_6.geometry}
          material-color={carSnap.items["280z_Windows"]}
          material={materials["280z_Windows"]}
        />
        <mesh
          geometry={nodes.Object_7.geometry}
          material-color={carSnap.items["280z_Plastic"]}
          material={materials["280z_Plastic"]}
        />
        <mesh
          geometry={nodes.Object_8.geometry}
          material-color={carSnap.items["280z_Lens"]}
          material={materials["280z_Lens"]}
        />
        <mesh
          geometry={nodes.Object_9.geometry}
          material-color={carSnap.items["280z_Chrome"]}
          material={materials["280z_Chrome"]}
        />
        <mesh
          geometry={nodes.Object_10.geometry}
          material-color={carSnap.items["280z_Headlight_lamp"]}
          material={materials["280z_Headlight_lamp"]}
        />
        <mesh
          geometry={nodes.Object_11.geometry}
          material-color={carSnap.items["280z_Turnsignal_lamp"]}
          material={materials["280z_Turnsignal_lamp"]}
        />
        <mesh
          geometry={nodes.Object_12.geometry}
          material-color={carSnap.items["280z_Blackout"]}
          material={materials["280z_Blackout"]}
        />
        <mesh
          geometry={nodes.Object_13.geometry}
          material-color={carSnap.items["280z_Brakes"]}
          material={materials["280z_Brakes"]}
        />
        <mesh
          geometry={nodes.Object_14.geometry}
          material-color={carSnap.items["SSR_Rim"]}
          material={materials.SSR_Rim}
        />
        <mesh
          geometry={nodes.Object_15.geometry}
          material-color={carSnap.items["SSR_Rim"]}
          material={materials.SSR_Rim}
        />
        <mesh
          geometry={nodes.Object_16.geometry}
          material-color={carSnap.items.SSR_Rim}
          material={materials.SSR_Rim}
        />
        <mesh
          geometry={nodes.Object_17.geometry}
          material-color={carSnap.items.SSR_Rim}
          material={materials.SSR_Rim}
        />
        <mesh
          geometry={nodes.Object_18.geometry}
          material-color={carSnap.items.SSR_Tire}
          material={materials.SSR_Tire}
        />
        <mesh
          geometry={nodes.Object_19.geometry}
          material-color={carSnap.items["280z_Textures"]}
          material={materials["280z_Textures"]}
        />
      </group>
    </group>
  );
}
